# Droid Please - AI Project Management CLI

## Core Purpose
A command-line interface tool that enables natural language project management through Anthropic's Claude AI. Users can manipulate files and manage codebases using plain English commands instead of traditional CLI syntax.

## Technical Stack
- Python 3.10+
- Key Dependencies:
  - anthropic: Claude AI integration
  - typer: CLI framework
  - rich: Terminal output formatting
  - pydantic: Data validation
  - poetry: Dependency management

## Project Architecture

### 1. Core Components
- `main.py`: CLI entry point and command routing
- `agent.py`: Claude AI communication and tool execution
- `agent_tools.py`: Core file operations (read, create, update, delete, list)
- `config.py`: Configuration management and environment handling
- `llm.py`: Language model interface abstraction
- `prompts.py`: System and operation prompts

### 2. Project Organization
```
droid_please/
├── Core Source Files
│   ├── main.py         # CLI interface
│   ├── agent.py        # AI orchestration
│   ├── agent_tools.py  # File operations
│   ├── config.py       # Config management
│   ├── llm.py         # LLM interface
│   └── util.py        # Utilities
│
├── Configuration
│   ├── pyproject.toml  # Project metadata and dependencies
│   └── poetry.lock    # Dependency lock file
│
└── Tests
    └── test_tools.py  # Tool testing suite
```

### 3. Key Features
- Natural language command processing
- Project-aware file operations:
  - File reading and writing
  - Directory listing
  - File creation/deletion
  - Content updates
  - File renaming
- Interactive and direct command modes
- Project context awareness
- Configuration management via `.droid` directory
- Security features (path traversal protection, project boundary enforcement)

### 4. Usage Patterns
- Interactive mode: `droid please`
- Direct commands: `droid please "command in natural language"`
- Project initialization: `droid init`
- Project learning: `droid learn`

The project effectively combines AI capabilities with practical file system operations, providing a developer-friendly interface for common project management tasks through natural language interaction.